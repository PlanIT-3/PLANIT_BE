<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="woojooin.planit.domain.member.mapper.MemberMapper">

    <resultMap id="MemberResultMap" type="woojooin.planit.domain.member.domain.Member">
        <id property="memberId" column="member_id"/>
        <result property="role" column="role"/>
        <result property="connectedId" column="connected_id"/>
        <result property="rewardCnt" column="reward_cnt"/>
        <result property="socialId" column="social_id"/>
        <result property="authVender" column="auth_vender"/>
        <result property="investType" column="invest_type"/>
        <result property="lastVisit" column="last_visit"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="benefit" column="benefit"/>
        <result property="nickname" column="nickname"/>
    </resultMap>

    <select id="findById" resultMap="MemberResultMap" parameterType="long">
        SELECT * FROM member WHERE member_id = #{memberId}
    </select>


    <insert id="insert" parameterType="woojooin.planit.domain.member.domain.Member" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO member (
            role, connected_id, reward_cnt, social_id, auth_vender,
            invest_type, last_visit, email, password, benefit, nickname
        ) VALUES (
                     #{role}, #{connectedId}, #{rewardCnt}, #{socialId}, #{authVender},
                     #{investType}, #{lastVisit}, #{email}, #{password}, #{benefit}, #{nickname}
                 )
    </insert>

    <update id="update" parameterType="woojooin.planit.domain.member.domain.Member">
        UPDATE member
        SET role = #{role},
            connected_id = #{connectedId},
            reward_cnt = #{rewardCnt},
            social_id = #{socialId},
            auth_vender = #{authVender},
            invest_type = #{investType},
            last_visit = #{lastVisit},
            email = #{email},
            password = #{password},
            benefit = #{benefit},
            nickname = #{nickname}
        WHERE member_id = #{memberId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM member WHERE member_id = #{memberId}
    </delete>

    <select id="findByEmail" resultMap="MemberResultMap" parameterType="String">
        SELECT * FROM member WHERE email = #{email}
    </select>
</mapper>
